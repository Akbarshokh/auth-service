definitions:
  models.CheckTokenReq:
    properties:
      access_token:
        example: valid token
        type: string
    type: object
  models.CheckTokenRes:
    properties:
      active:
        type: boolean
    type: object
  models.GetTokenReq:
    properties:
      refresh_token:
        example: valid token
        type: string
    type: object
  models.GetTokenRes:
    properties:
      access_token:
        type: string
      active:
        type: boolean
      client_id:
        type: string
      refresh_token:
        type: string
    type: object
  models.SignInReq:
    properties:
      access_token:
        example: valid token
        type: string
      client_id:
        example: "12345"
        type: string
      email:
        example: '@hamkorbank.uz'
        type: string
      password:
        type: string
    type: object
  models.SignUpReq:
    properties:
      client_id:
        example: "12345"
        type: string
      device_num:
        example: 172.25.102.25 / 423265
        type: string
      device_type:
        example: web / mobile
        type: string
      email:
        example: '@hamkorbank.uz'
        type: string
      first_name:
        example: Ism
        type: string
      last_name:
        example: Familiya
        type: string
      password:
        example: Password@
        type: string
    type: object
  models.SignUpRes:
    properties:
      access_token:
        type: string
      active:
        type: boolean
      client_id:
        type: string
      refresh_token:
        type: string
    type: object
  rest.Response:
    properties:
      data: {}
      error_code:
        type: integer
      error_note:
        type: string
      status:
        type: string
    type: object
info:
  contact: {}
paths:
  /check-token:
    post:
      description: This endpoint verifies token is active or not
      parameters:
      - description: Access Token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CheckTokenReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/rest.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.CheckTokenRes'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.Response'
      summary: Checking token with Access Token
      tags:
      - User Auth Service
  /get-token:
    post:
      description: This endpoint verifies token is active or not and generates new
        access and refresh tokens
      parameters:
      - description: Refresh Token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.GetTokenReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/rest.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.GetTokenRes'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.Response'
      summary: Checking token with Refresh Token
      tags:
      - User Auth Service
  /sign-in:
    post:
      description: API for Sign In
      parameters:
      - description: Client ID
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.SignInReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/rest.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.Response'
      summary: Sign In using client_id, email, and access_token
      tags:
      - User Auth Service
  /sign-up:
    post:
      description: API for Sign Up
      parameters:
      - description: Client ID
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.SignUpReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/rest.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.SignUpRes'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.Response'
      summary: Sign Up
      tags:
      - User Auth Service
swagger: "2.0"
